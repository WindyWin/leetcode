// Generated by Qodo Gen

import { maxProfit } from "../src/122.bestTimeToBuyAndSellStockII";


describe('maxProfit', () => {

  // Calculate total profit when prices are in ascending order
  it('should return maximum profit when prices are strictly increasing', () => {
    const prices = [1, 2, 3, 4, 5];
    const result = maxProfit(prices);
    expect(result).toBe(4);
  });

  // Handle empty prices array
  it('should return 0 when prices array is empty', () => {
    const prices: number[] = [];
    const result = maxProfit(prices);
    expect(result).toBe(0);
  });

  // Calculate total profit when prices have multiple peaks and valleys
  it('should calculate total profit when prices have multiple peaks and valleys', () => {
    const prices = [1, 2, 3, 0, 2, 5, 0, 3];
    const result = maxProfit(prices);
    expect(result).toBe(10);
  });

  // Return 0 when prices array has only one element
  it('should return 0 when prices array has only one element', () => {
    const prices = [5];
    const result = maxProfit(prices);
    expect(result).toBe(0);
  });

  // Handle consecutive days with same price values
  it('should handle consecutive days with same price values', () => {
    const prices = [3, 3, 3, 5, 5, 5, 1, 1, 1];
    const result = maxProfit(prices);
    expect(result).toBe(2);
  });
});
