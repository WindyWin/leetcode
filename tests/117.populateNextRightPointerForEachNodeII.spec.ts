// Generated by Qodo Gen

import { _Node, connect } from "../src/117.populateNextRightPointerForEachNodeII";
describe('connect', () => {

   // Connect nodes at same level in a complete binary tree
   it('should connect nodes at same level in a complete binary tree', () => {
      const root = new _Node(1);
      root.left = new _Node(2);
      root.right = new _Node(3);
      root.left.left = new _Node(4);
      root.left.right = new _Node(5);
      root.right.left = new _Node(6);
      root.right.right = new _Node(7);

      const result = connect(root);

      expect(result?.left?.next).toBe(result?.right);
      expect(result?.left?.left?.next).toBe(result?.left?.right);
      expect(result?.left?.right?.next).toBe(result?.right?.left);
      expect(result?.right?.left?.next).toBe(result?.right?.right);
      expect(result?.right?.right?.next).toBeNull();
   });

   // Handle null root input
   it('should return null when root is null', () => {
      const result = connect(null);

      expect(result).toBeNull();
   });
});
