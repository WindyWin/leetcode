// Generated by Qodo Gen

import { uniquePaths } from "../src/62.uniquePath";

describe('uniquePaths', () => {

  // Return number of unique paths for a 2x2 grid
  it('should return 2 unique paths for a 2x2 grid', () => {
    const result = uniquePaths(2, 2);
    expect(result).toBe(2);
  });

  // Handle minimum valid input values
  it('should return 1 path for 1x1 grid', () => {
    const result = uniquePaths(1, 1);
    expect(result).toBe(1);
  });

  // Return number of unique paths for a 3x3 grid
  it('should return 6 when grid is 3x3', () => {
    const result = uniquePaths(3, 3);
    expect(result).toBe(6);
  });

  // Return number of unique paths for a 1x1 grid
  it('should return 1 when grid is 1x1', () => {
    const result = uniquePaths(1, 1);
    expect(result).toBe(1);
  });

  // Calculate paths for rectangular grids where m != n
  it('should return correct number of paths for a 2x3 grid', () => {
    const result = uniquePaths(2, 3);
    expect(result).toBe(3);
  });
  
  it('should return correct number of paths for a 51,9 grid', () => {
    const result = uniquePaths(51, 9);
    expect(result).toBe(1916797311);
  });

});
